# Default values for blocky.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

replicaCount: 1

image:
  repository: spx01/blocky
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: [ ]

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }
podLabels: { }

podSecurityContext:
  fsGroup: 100

securityContext:
  runAsNonRoot: true
  runAsUser: 100
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true

service:
  enabled: true
  type: ClusterIP
  # type: LoadBalancer

env:
  # Optional to synchronize the log timestamp with host
  - name: TZ
    value: "Europe/Berlin"

# See https://0xerr0r.github.io/blocky/v0.23/configuration/ for all available options
config:
  ports:
    dns: 53
    # tls: 853
    # http: 4000
    # https: 443
  upstreams:
    groups:
      default:
        - 1.1.1.1
        - 8.8.8.8
  # redis:
  #   address: blocky-redis-master:6379
  #   required: true

resources: { }
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
#   cpu: 100m
#   memory: 128Mi

livenessProbe:
  exec:
    command:
      - /app/blocky
      - healthcheck
readinessProbe:
  exec:
    command:
      - /app/blocky
      - healthcheck

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  # Optional to synchronize the log timestamp with host
  - name: tz-config
    hostPath:
      path: /etc/localtime
      type: File
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  # Optional to synchronize the log timestamp with host
  - name: tz-config
    mountPath: /etc/localtime
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: { }

tolerations: [ ]

affinity: { }

ui:
  enabled: false
  image:
    repository: ghcr.io/mozart409/blocky-frontend
    pullPolicy: IfNotPresent
    # tag: latest
  service:
    enabled: true
    type: ClusterIP
    port: 8002
  ingress:
    enabled: false
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: [ ]
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

redis:
  enabled: false
  architecture: standalone
  auth:
    enabled: false
